@model List<RotoNews>

@{
    ViewData["Title"] = "News";
    List<RotoPlayer> players = ViewBag.Players;
    string latestUserKey = Model.OrderByDescending(x => x.DateTime).FirstOrDefault().NewsKey;
}

<style>
    .dataTables_paginate {
        float: left !important;
    }
    .dataTables_wrapper .dataTables_length {
        float: right !important;
    }
</style>

<div class="panel">
    <div class="panel-body pn">
        <table id="tb-roto-news" class="table table-hover fs14">
            <thead>
                <tr>
                    <th>Created At</th>
                    <th>Name</th>
                    <th>Title</th>
                    <th>Detail</th>
                    <th>Injury</th>
                    <th>Transaction</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RotoNews item in Model)
                {
                <tr>
                    <td class="w100">@item.DateTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td class="w100">@players.FirstOrDefault(x => x.PlayerKey == item.Player).Name</td>
                    <td class="w200">@item.Title</td>
                    <td class="mnw500">@Html.Raw(@item.Detail)</td>
                    <td class="w50 text-center">
                        @if (item.NewsAttribute.injury == "true")
                        {
                            <i class="fa fa-check text-success fs20"></i>
                        }
                    </td>
                    <td class="w50 text-center">
                        @if (item.NewsAttribute.transaction == "true")
                        {
                            <i class="fa fa-check text-success fs20"></i>
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>




@section Scripts{
    <script type="text/javascript">
        var key = '@latestUserKey';
        var index = 1;

        $(function () {
            SetMenuByCode("News");

            $(document).ready(function () {
                $('#tb-roto-news').DataTable({
                    "aaSorting": [[0, 'desc']],
                    "scrollX": true,
                    "sDom": '<"dt-panelmenu clearfix"pfr>t<"dt-panelfooter clearfix"il>'});
            });

            // Set up notification to call http://localhost:58240/api/roto?key=xxxx for new message. check every 60 seconds
            setInterval(function () { notifyMe(); }, 60000);
        });
        
        function notifyMe() {
            // Let's check if the browser supports notifications
            if (!("Notification" in window)) {
                alert("This browser does not support system notifications");
                // This is not how you would really do things if they aren't supported. :)
            }
            // Let's requrest permission by default
            else if (Notification.permission === "default") {
                Notification.requestPermission(function (permission) {
                    if (!('permission' in Notification)) {
                        Notification.permission = permission;
                    }
                });
            }
            // Let's check whether notification permissions have already been granted
            else if (Notification.permission === "granted") {
                
                console.log("begin to check news. time: " + index);
                index++;

                // if news found then popup notification
                $.ajax({
                    url: "/api/roto?key=" + key, success: function (result) {
                        if (result.length > 0) {
                            var html = result.length + " news found !";
                            console.log(html);
                            // If it's okay let's create a notification
                            var notification = new Notification(html);
                            key = result[0].newsKey;

                            for (x in result) {
                                if (x > 5) {
                                    break;
                                }
                                var title = result[x].player + "=> " + result[x].title;
                                new Notification(title);
                            }

                            location.reload();
                        }
                    }
                });
            }
        }
        
    </script>
}
